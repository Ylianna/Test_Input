{"version":3,"sources":["Input.tsx","ModalWindowShow.tsx","App.tsx","reportWebVitals.ts","index.tsx","ModalWindowShow.module.css","App.module.css","Input.module.css"],"names":["Input","type","onChange","onChangeText","onKeyPress","onEnter","error","label","className","spanClassName","restProps","e","currentTarget","value","trim","key","style","input","placeholder","ModalWindowShow","isOpend","children","title","onModalClose","modal__wrapper","open","close","modal__body","modal__close","onClick","App","useState","name","setName","lastName","setLastName","errorName","setErrorName","errorLastname","setErrorLastname","modal","setModal","onShowName","formContainer","inputContainer","disabled","modalTitle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4f732d2d.chunk.js","sourcesContent":["import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport style from './Input.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype InputPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    label: string\r\n}\r\n\r\nconst Input: React.FC<InputPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName, label,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value.trim())\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'name'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={style.input}\r\n                placeholder={label}\r\n                {...restProps}\r\n            />\r\n            {<span className={style.error}>{error}</span>}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport style from './ModalWindowShow.module.css'\r\n\r\n\r\ntype ModalWindowShowPropsType = {\r\n    isOpend: boolean,\r\n    title: string,\r\n    onModalClose: () => void\r\n}\r\n\r\nconst ModalWindowShow: React.FC<ModalWindowShowPropsType> = ({isOpend, children, title, onModalClose, ...restProps}) => {\r\n\r\n    return (\r\n        <div className={`${style.modal__wrapper} ${isOpend ? style.open : style.close}`}>\r\n            <div className={style.modal__body}>\r\n                <div className={`${style.modal__close} ${style.close}`} onClick={onModalClose}>x</div>\r\n                <h2>{`Здравствуйте, ${title}`}</h2>\r\n                <hr/>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalWindowShow\r\n","import React, {useState} from 'react';\r\nimport style from './App.module.css'\r\nimport './reset.css';\r\nimport Input from \"./Input\";\r\nimport ModalWindowShow from \"./ModalWindowShow\";\r\n\r\nfunction App() {\r\n\r\n    const [name, setName] = useState<string>('');\r\n    const [lastName, setLastName] = useState<string>('');\r\n    const [errorName, setErrorName] = useState<string>('')\r\n    const [errorLastname, setErrorLastname] = useState<string>('')\r\n    const [modal, setModal] = useState({modal: false});\r\n\r\n    const onModalClose = () => {\r\n        setModal({...modal, modal: false});\r\n        setName('');\r\n        setLastName('');\r\n    };\r\n\r\n    const onShowName = () => {\r\n        if (name && !lastName) {\r\n            setErrorLastname('Вы забыли написать фамилию')\r\n            errorName && setErrorName('');\r\n        } else if (!name && lastName) {\r\n            setErrorName('Вы забыли написать имя')\r\n            errorLastname && setErrorLastname('');\r\n        } else if (name && lastName) {\r\n            setModal({...modal, modal: true});\r\n            errorName && setErrorName('');\r\n            errorLastname && setErrorLastname('');\r\n            // error && setError('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={style.App}>\r\n\r\n            <div className={style.formContainer}>\r\n\r\n                <div className={style.inputContainer}>\r\n                    <Input\r\n                        value={name}\r\n                        onChangeText={setName}\r\n                        onEnter={onShowName}\r\n                        error={errorName}\r\n                        label={'Name'}\r\n                    />\r\n                </div>\r\n\r\n                <div className={style.inputContainer}>\r\n                    <Input\r\n                        value={lastName}\r\n                        onChangeText={setLastName}\r\n                        onEnter={onShowName}\r\n                        error={errorLastname}\r\n                        label={'Lastname'}\r\n                    />\r\n                </div>\r\n\r\n                <button onClick={onShowName} disabled={!name && !lastName}>Show Name</button>\r\n\r\n            </div>\r\n\r\n            <div className={style.modalTitle}>\r\n\r\n                <ModalWindowShow\r\n                    isOpend={modal.modal}\r\n                    title={`${name} ${lastName}`}\r\n                    onModalClose={onModalClose}\r\n                />\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal__wrapper\":\"ModalWindowShow_modal__wrapper__mNBnS\",\"open\":\"ModalWindowShow_open__1PGWY\",\"modal__body\":\"ModalWindowShow_modal__body__3qc8E\",\"modal__close\":\"ModalWindowShow_modal__close__1CGaZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__uRpXX\",\"formContainer\":\"App_formContainer__15RCs\",\"inputContainer\":\"App_inputContainer__dT8lM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3zXQW\",\"error\":\"Input_error__16iKb\"};"],"sourceRoot":""}